# ConfigMap for EBS CSI troubleshooting script
apiVersion: v1
kind: ConfigMap
metadata:
  name: ebs-csi-troubleshoot
  namespace: kube-system
  labels:
    app.kubernetes.io/name: aws-ebs-csi-driver
data:
  troubleshoot.sh: |
    #!/bin/bash
    echo "=== EBS CSI Controller Status ==="
    kubectl get deployment ebs-csi-controller -n kube-system
    echo
    echo "=== EBS CSI Controller Pods ==="
    kubectl get pods -n kube-system -l app=ebs-csi-controller
    echo
    echo "=== EBS CSI Service Account ==="
    kubectl get serviceaccount ebs-csi-controller-sa -n kube-system -o yaml
    echo
    echo "=== Recent Events ==="
    kubectl get events -n kube-system --field-selector involvedObject.name=ebs-csi-controller --sort-by='.lastTimestamp' | tail -10
    echo
    echo "=== PVC Status ==="
    kubectl get pvc --all-namespaces | grep -E "(Pending|Failed)"
    echo
    echo "=== CSI Node Pods ==="
    kubectl get pods -n kube-system -l app=ebs-csi-node
---
# ClusterRole for troubleshooting
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: ebs-csi-troubleshoot
  labels:
    app.kubernetes.io/name: aws-ebs-csi-driver
rules:
- apiGroups: [""]
  resources: ["pods", "events", "persistentvolumeclaims", "serviceaccounts"]
  verbs: ["get", "list"]
- apiGroups: ["apps"]
  resources: ["deployments"]
  verbs: ["get", "list"]
---
# ClusterRoleBinding for troubleshooting
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: ebs-csi-troubleshoot
  labels:
    app.kubernetes.io/name: aws-ebs-csi-driver
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ebs-csi-troubleshoot
subjects:
- kind: ServiceAccount
  name: ebs-csi-troubleshoot-sa
  namespace: kube-system
---
# ServiceAccount for troubleshooting
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ebs-csi-troubleshoot-sa
  namespace: kube-system
  labels:
    app.kubernetes.io/name: aws-ebs-csi-driver 